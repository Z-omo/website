/*
 * SASS definitions for RWD view device dimensions.
 */

$rwdDeviceDims: (
  mobile: (
    width:      382, 
    height:     768,
    vpWidth:    320,
    vpHeight:   529,
    vpVertPos:  139,
    vpHorizPos: 31 
  ),
  // need to use dims where the websites actually switch to tablet views:
  tablet: (
    width:      648, 
    height:     897,
    vpWidth:    576,
    vpHeight:   720,
    vpVertPos:  115,
    vpHorizPos: 34    
  ),
  desktop: (
    width:      1417, 
    height:     880,
    vpWidth:    1417,
    vpHeight:   806,
    vpVertPos:  74,
    vpHorizPos: 0    
  )
);

$rwdIFrameBorderWidth: 0;

@mixin rwdIFrameRules($rwdMode, $span: 100%)
{
  @if map-has-key($rwdDeviceDims, $rwdMode)
  {
    $rwdDims: map-get($rwdDeviceDims, $rwdMode);
    $width: map-get($rwdDims, width);
    $height: map-get($rwdDims, height);

    $borderWidth: 3;
    @if desktop == $rwdMode { $borderWidth: 0; }

    position: absolute;
    top: $span * (map-get($rwdDims, vpVertPos) / $height);
    left: $span * ((map-get($rwdDims, vpHorizPos) - $borderWidth) / $width);
    width: $span * (map-get($rwdDims, vpWidth) / ($width - $rwdIFrameBorderWidth));
    height: $span * (map-get($rwdDims, vpHeight) / $height);
    
    @if 0 == $borderWidth
    {
      border: none;
    } @else {
      border: solid #{$borderWidth}px black;
    }
  }

  @else
  {
    @warn "Sorry, the device name: `#{$rwdMode}` is not defined in map $rwdDeviceDims."
  }
}

@mixin rwdDeviceRules($rwdMode, $rwdWidth: 100vw)
{
  @if map-has-key($rwdDeviceDims, $rwdMode)
  {
    $rwdDims: map-get($rwdDeviceDims, $rwdMode);
    $width: map-get($rwdDims, width);
    $height: map-get($rwdDims, height);
    $aspectRatio: $height / $width;

    width: $rwdMode;
    height: calc(#{$rwdWidth} * #{$aspectRatio});
    max-width: #{$width}px;
    max-height: #{$height}px;
  }

  @else
  {
    @warn "Sorry, the device name: `#{$rwdMode}` is not defined in map $rwdDeviceDims."
  }
}
